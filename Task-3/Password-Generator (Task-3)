import tkinter as tk
import random
import string

def generate_password():
    user_name = name_entry.get()
    password_length = int(length_entry.get())
    complexity = complexity_combobox.get()

    if password_length <= 0:
        result_label.config(text="Please enter a valid length.", fg="red")
        return

    characters = ""

    if complexity == "Low":
        characters = string.ascii_letters + string.digits
    elif complexity == "Medium":
        characters = string.ascii_letters + string.digits + string.punctuation
    elif complexity == "High":
        characters = string.ascii_letters + string.digits + string.punctuation + string.whitespace

    generated_password = ''.join(random.choice(characters) for _ in range(password_length))
    result_label.config(text=f"Hi {user_name}, Generated Password: {generated_password}", fg="green")

def reset_form():
    name_entry.delete(0, tk.END)
    length_entry.delete(0, tk.END)
    complexity_combobox.set("Medium")
    result_label.config(text="", fg="black")

root = tk.Tk()
root.title("Password Generator")

frame = tk.Frame(root, padx=20, pady=20)
frame.grid(row=0, column=0, padx=20, pady=20, sticky="nsew")

name_label = tk.Label(frame, text="Your Name:", font=("Arial", 12))
name_label.grid(row=0, column=0, padx=10, pady=5, sticky="w")

name_entry = tk.Entry(frame, font=("Arial", 12), highlightthickness=2, highlightcolor="darkblue")  
name_entry.grid(row=0, column=1, padx=10, pady=5)

length_label = tk.Label(frame, text="Password Length:", font=("Arial", 12))
length_label.grid(row=1, column=0, padx=10, pady=5, sticky="w")

length_entry = tk.Entry(frame, font=("Arial", 12), highlightthickness=2, highlightcolor="darkblue")  
length_entry.grid(row=1, column=1, padx=10, pady=5)

complexity_label = tk.Label(frame, text="Complexity:", font=("Arial", 12))
complexity_label.grid(row=2, column=0, padx=10, pady=5, sticky="w")

complexity_options = ["Low", "Medium", "High"]
complexity_combobox = tk.StringVar()
complexity_combobox.set("Medium")  

complexity_menu = tk.OptionMenu(frame, complexity_combobox, *complexity_options)
complexity_menu.config(font=("Arial", 12), width=13)  
complexity_menu.grid(row=2, column=1, padx=10, pady=5, sticky="w")

generate_button = tk.Button(frame, text="Generate Password", command=generate_password, bg="#007ACC", fg="white", font=("Arial", 14))
generate_button.grid(row=3, column=0, columnspan=2, padx=10, pady=10, sticky="we")  

reset_button = tk.Button(frame, text="Reset", command=reset_form, bg="#E74C3C", fg="white", font=("Arial", 14))
reset_button.grid(row=4, column=0, columnspan=2, padx=10, pady=10, sticky="we")  

result_label = tk.Label(frame, text="", font=("Arial", 12), wraplength=300, justify="center")
result_label.grid(row=5, column=0, columnspan=2, pady=10)

frame.grid_rowconfigure(6, weight=1)
frame.grid_columnconfigure(2, weight=1)

root.mainloop()
